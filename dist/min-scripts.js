let pokemonRepository = function () { let t = []; const e = "https://pokeapi.co/api/v2/pokemon/?limit=150"; function n(e) { t.push(e) } function o(t) { let e = $("#poke-list"), n = $("<li></li>"), o = $("<button></button>"), i = $("<img/>"), l = $("<p></p>"); o.attr({ type: "button", "data-toggle": "modal", "data-target": "#modal" }), a(t).then(function () { i.attr({ src: `${t.imageUrl}`, alt: `picture of ${t.name}` }), l.text(t.name) }), o.addClass("poke-button btn btn-lg"), n.addClass("list-group-item"), n.addClass("col-xl-3 col-lg-4 col-md-5 col-sm-6 col-xs-10 align-items-center"), o.append(i), o.append(l), n.append(o), e.append(n), function (t, e) { t.on("pointerdown", function () { !function (t) { let e = $(".modal-body"), n = $(".modal-title"); n.empty(), e.empty(); let o = $("<p></p>"), i = $("<p></p>"), l = $("<img>"), r = []; a(t).then(function () { n.text(t.name), o.text(`Height: ${t.height}mm`), l.attr({ src: t.artImageUrl, alt: `picture of ${t.name}` }), l.addClass("modal-image") }), Object.keys(t.types).forEach(e => { r.push(" " + t.types[e].type.name) }), i.text(`Type(s):  ${r}`), e.append(l), e.append(o), e.append(i), $("input").val("") }(e) }) }(o, t) } function a(t) { let e = t.detailsUrl; return fetch(e).then(function (t) { return t.json() }).then(function (e) { t.imageUrl = e.sprites.front_default, t.artImageUrl = e.sprites.other["official-artwork"].front_default, t.height = e.height, t.types = e.types }).catch(function (t) { console.error(t) }) } return { add: n, getAll: function () { return t }, addListItem: o, loadList: function () { return fetch(e).then(function (t) { return t.json() }).then(function (t) { t.results.forEach(function (t) { n({ name: t.name, types: t.types, detailsUrl: t.url }) }) }).catch(function (t) { console.error(t) }) }, loadDetails: a, findPokemon: function () { t.forEach(o); let e = document.getElementById("poke-list"); document.getElementById("search-bar").addEventListener("input", n => { e.innerHTML = "", console.log(n.target.value), function (e) { return e ? t.filter(t => t.name.toLowerCase().includes(e.toLowerCase())) : t }(n.target.value).forEach(o) }) } } }(); pokemonRepository.loadList().then(function () { pokemonRepository.findPokemon() });
